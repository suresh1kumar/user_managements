
#configuring application name  
spring.application.name=login-service
eureka.client.serviceUrl.defaultZone=http://52.136.122.70:8761/eureka/
eureka.client.enabled= false

message=Dev message

welcome.message=Welcome message from property file! Welcome to ${app.name} in DEV
basic.message: Dynamic Message in DEV
#configuring port  
server.port=9091

#Read only DB details
#spring.datasource.username=ppe_view
#spring.datasource.password=PPE_VIN+1

spring.datasource.platform=postgres
spring.datasource.username=techouts
spring.datasource.password=techouts_2020
##spring.datasource.url=jdbc:postgresql://40.87.88.21:5432/densply_ppe?currentSchema=ppe_rule_db
spring.datasource.url=jdbc:postgresql://13.90.195.88:5432/densply_ppe
#spring.datasource.url=jdbc:postgresql://40.87.88.21:5432/densply_ppe


##spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
##spring.datasource.initialization-mode=always
##spring.datasource.platform=postgres
##spring.datasource.username=postgres
##spring.datasource.password=pavan
spring.datasource.driver-class-name=org.postgresql.Driver
# Hibernate additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto = update

logging.file.name = ./logs/userMgmt.log

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG





# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

## App Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000
management.security.enabled = false
##management.port = 9000
## Spring Profiles
# spring.profiles.active=prod


#Hikari Database connection pool settings
#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.enabled=false
spring.datasource.hikari.connection-timeout = 20000 

#TODO: Following settings are for dev mode. For prod, the no. of connections should be higher and all hikari
#settings need to be revisited. 
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle= 1 
#maximum pool size
spring.datasource.hikari.maximum-pool-size= 5 
#maximum lifetime of a connection after which Hikari connection pooler should close a connection. Default value of 
# this is 30 minutes which might be too long if the DBMS's idle connection timeout is shorter. Hence setting this to 10 minutes. 
#Hikari closes connections that have been idle for the amount specified by idle-timeout and the no. of them is greater than
#minimum-idle. 
spring.datasource.hikari.max-lifetime= 600000  
spring.datasource.hikari.idle-timeout= 120000